/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ttuhsc.speechperception.gui;

import com.ttuhsc.speechperception.utility.ReadExcel;
import com.ttuhsc.speechperception.utility.WriteExcel;
import com.ttuhsc.speechperception.utility.PlaySound;
import com.ttuhsc.speechperception.utility.RunSoundProcedures;
import com.ttuhsc.speechperception.vo.SoundData;
import com.ttuhsc.speechperception.vo.UserData;
import java.awt.GraphicsEnvironment;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author Lab
 */
public class ShowImage extends javax.swing.JFrame {

    /**
     * Creates new form ShowImage
     */
    UserData user;
    List<String> soundCategory = new ArrayList();
    String soundName;
    Iterator<SoundData> sound;
    PlaySound sp = new PlaySound();
    CorrectMesssage cm = new CorrectMesssage(this, rootPaneCheckingEnabled);
    IncorrectMessage incorrect = new IncorrectMessage(this, rootPaneCheckingEnabled);
    SoundData sd;
    Integer count;
    
    public ShowImage(List<String> categories,UserData ud,String soundName,int sheetNo) {
        
        soundCategory = categories;
        this.soundName = soundName;
        //this.sheetNo= sheetNo;
        user=ud;
             lst = rd.readExcel(sheetNo); 
     sound = lst.iterator();
     sd = sound.next();
     count=lst.size();
        initComponents();

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
      //HashMap<Integer,SoundData> map = new HashMap<Integer,SoundData>();
      
       
    List<SoundData> newList = new ArrayList<SoundData>();
    ReadExcel rd = new ReadExcel();
    List<SoundData> lst = new ArrayList<SoundData>();
    WriteExcel we = new WriteExcel();
      
    //List lst = getImage();
 
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        String imageName = sd.getImageFile();
        System.out.println(imageName);
        jLabel1.setIcon(new javax.swing.ImageIcon(imageName));
        sp.playSound(sd.getSoundFile());
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("Replay Sound");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText(count.toString());

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setText("Incorrect");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 255, 0));
        jButton1.setText("Correct");
        jButton1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jButton1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                jButton1AncestorRemoved(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jButton1PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(459, 459, 459)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(547, 547, 547)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(660, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(257, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        sp.playSound(sd.getSoundFile());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        count--;
        sd.setUserResponse("Incorrect");
        jLabel2.setText(count.toString());
        if(sd.getActualResponse().equals(sd.getUserResponse())){
            Timer timer = new Timer(2000, e -> cm.setVisible(false));
            timer.setRepeats(false);
            timer.start();
            cm.setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds());
            cm.setVisible(true);
        }else{
            Timer timer = new Timer(2000, e -> incorrect.setVisible(false));
            timer.setRepeats(false);
            timer.start();
            incorrect.setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds());
            incorrect.setVisible(true);
        }
        newList.add(sd);
        if(sound.hasNext()){
            sd = sound.next();
            String imageName = sd.getImageFile();
            System.out.println(imageName);
            jLabel1.setIcon(new javax.swing.ImageIcon(imageName));
            sp.playSound(sd.getSoundFile());
        }else{
            try {
                we.writeExcel(newList,user,soundName);
                if(soundCategory.size()>1){
                    soundCategory.remove(0);
                    String s = soundCategory.get(0);
                    RunSoundProcedures run = new RunSoundProcedures();
                    run.runNextProc(s, soundCategory,user);
                }else{
                    Thankyou tk = new Thankyou();
                    Timer timer = new Timer(2000, e -> tk.setVisible(false));
                    timer.setRepeats(false);
                    timer.start();
                    tk.setExtendedState(tk.MAXIMIZED_BOTH);
                    tk.setVisible(true);
                }

            } catch (IOException ex) {
                Logger.getLogger(ShowImage.class.getName()).log(Level.SEVERE, null, ex);
            }
            super.dispose();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jButton1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1AncestorAdded

    private void jButton1AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jButton1AncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1AncestorRemoved

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        sd.setUserResponse("Correct");
        count--;
        jLabel2.setText(count.toString());
        if(sd.getActualResponse().equals(sd.getUserResponse())){
            Timer timer = new Timer(2000, e -> cm.setVisible(false));
            timer.setRepeats(false);
            timer.start();
            cm.setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds());
            cm.setVisible(true);
        }else{
            Timer timer = new Timer(2000, e -> incorrect.setVisible(false));
            timer.setRepeats(false);
            timer.start();
            incorrect.setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds());
            incorrect.setVisible(true);
        }
        newList.add(sd);
        if(sound.hasNext()){
            sd = sound.next();
            String imageName = sd.getImageFile();
            System.out.println(imageName);
            jLabel1.setIcon(new javax.swing.ImageIcon(imageName));
            sp.playSound(sd.getSoundFile());
        }else{
            try {
                we.writeExcel(newList,user,soundName);
                if(soundCategory.size()>1){
                    soundCategory.remove(0);
                    String s = soundCategory.get(0);
                    RunSoundProcedures run = new RunSoundProcedures();
                    run.runNextProc(s, soundCategory,user);
                }else{
                    Thankyou tk = new Thankyou();
                    Timer timer = new Timer(2000, e -> tk.setVisible(false));
                    timer.setRepeats(false);
                    timer.start();
                    tk.setExtendedState(tk.MAXIMIZED_BOTH);
                    tk.setVisible(true);
                }

            } catch (IOException ex) {
                Logger.getLogger(ShowImage.class.getName()).log(Level.SEVERE, null, ex);
            }
            super.dispose();
        }
        //super.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jButton1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1PropertyChange

    
    /**
     * @param args the command line arguments
     */
//    public static boolean main() {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ShowImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ShowImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ShowImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ShowImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                 //File file = new File("C:/Users/Lab/Documents/My Experiments/SpeechPerceptionExp_New/BeeSound/A1bee1.wav");
//
//         //try {
//          //       AudioInputStream ais = AudioSystem.getAudioInputStream(file);
//        
//        //Clip clip;
//               
//                //    clip = AudioSystem.getClip();
//                 //   clip.open(ais);
//                //    clip.start();
//                 //   System.out.println("Testing Sound");
//             //   } catch (LineUnavailableException ex) {
//               //     Logger.getLogger(ShowImage.class.getName()).log(Level.SEVERE, null, ex);
//               // } catch (IOException ex) {
//                //    Logger.getLogger(ShowImage.class.getName()).log(Level.SEVERE, null, ex);
//              //  } catch (UnsupportedAudioFileException ex) {
//               //     Logger.getLogger(ShowImage.class.getName()).log(Level.SEVERE, null, ex);
//               // }
//  
//                
//         
//                //new ShowImageP().setVisible(true);
//               
//            }
//        });
//         return true;
//    }

  
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
